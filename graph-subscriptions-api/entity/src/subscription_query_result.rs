//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use super::sea_orm_active_enums::SubscriptionQueryResultStatus;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "subscription_query_result")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub query_id: String,
    pub ticket_user: String,
    pub ticket_signer: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub ticket_name: Option<String>,
    pub deployment_qm_hash: Option<String>,
    pub query_count: i64,
    pub status_code: SubscriptionQueryResultStatus,
    pub response_time_ms: i32,
    #[sea_orm(column_type = "Float")]
    pub query_budget: f32,
    #[sea_orm(column_type = "Float")]
    pub indexer_fees: f32,
    pub message_timestamp: i64,
    pub timeframe_start_timestamp: i64,
    pub timeframe_end_timestamp: i64,
    pub message_offset: i64,
    #[sea_orm(column_type = "Text")]
    pub message_key: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl Entity {}
